[{"/Users/ben/transit-deprivation-v2/src/reportWebVitals.js":"1","/Users/ben/transit-deprivation-v2/src/components/App.js":"2","/Users/ben/transit-deprivation-v2/src/index.js":"3","/Users/ben/transit-deprivation-v2/src/store/initialState.js":"4","/Users/ben/transit-deprivation-v2/src/store/actionTypes.js":"5","/Users/ben/transit-deprivation-v2/src/store/reducer.js":"6","/Users/ben/transit-deprivation-v2/src/store/index.js":"7","/Users/ben/transit-deprivation-v2/src/store/actions.js":"8","/Users/ben/transit-deprivation-v2/src/components/DatasetSelector.js":"9","/Users/ben/transit-deprivation-v2/src/components/TimeLimitSlider.js":"10","/Users/ben/transit-deprivation-v2/src/components/MapLegend.js":"11","/Users/ben/transit-deprivation-v2/src/components/OpacitySlider.js":"12","/Users/ben/transit-deprivation-v2/src/components/TravelTimePlot.js":"13","/Users/ben/transit-deprivation-v2/src/utils/ColorScheme.js":"14","/Users/ben/transit-deprivation-v2/src/components/Map.js":"15","/Users/ben/transit-deprivation-v2/src/components/MapTooltip.js":"16","/Users/ben/transit-deprivation-v2/src/components/MapColorSchemeSelector.js":"17"},{"size":362,"mtime":1608158312019,"results":"18","hashOfConfig":"19"},{"size":4246,"mtime":1608283075823,"results":"20","hashOfConfig":"19"},{"size":671,"mtime":1608162519333,"results":"21","hashOfConfig":"19"},{"size":1194,"mtime":1608283003321,"results":"22","hashOfConfig":"19"},{"size":667,"mtime":1608257037013,"results":"23","hashOfConfig":"19"},{"size":2001,"mtime":1608283075825,"results":"24","hashOfConfig":"19"},{"size":289,"mtime":1608260645211,"results":"25","hashOfConfig":"19"},{"size":4478,"mtime":1608283003317,"results":"26","hashOfConfig":"19"},{"size":3610,"mtime":1608283075827,"results":"27","hashOfConfig":"19"},{"size":1765,"mtime":1608283604366,"results":"28","hashOfConfig":"19"},{"size":5203,"mtime":1608268689364,"results":"29","hashOfConfig":"19"},{"size":1596,"mtime":1608166818259,"results":"30","hashOfConfig":"19"},{"size":3648,"mtime":1608283183987,"results":"31","hashOfConfig":"19"},{"size":469,"mtime":1608168410312,"results":"32","hashOfConfig":"19"},{"size":9352,"mtime":1608282604837,"results":"33","hashOfConfig":"19"},{"size":3426,"mtime":1608283003319,"results":"34","hashOfConfig":"19"},{"size":1741,"mtime":1608283183984,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1wovqli",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ben/transit-deprivation-v2/src/reportWebVitals.js",[],["79","80"],"/Users/ben/transit-deprivation-v2/src/components/App.js",[],["81","82"],"/Users/ben/transit-deprivation-v2/src/index.js",[],["83","84"],"/Users/ben/transit-deprivation-v2/src/store/initialState.js",["85"],"/Users/ben/transit-deprivation-v2/src/store/actionTypes.js",[],"/Users/ben/transit-deprivation-v2/src/store/reducer.js",[],"/Users/ben/transit-deprivation-v2/src/store/index.js",[],"/Users/ben/transit-deprivation-v2/src/store/actions.js",[],"/Users/ben/transit-deprivation-v2/src/components/DatasetSelector.js",[],"/Users/ben/transit-deprivation-v2/src/components/TimeLimitSlider.js",[],"/Users/ben/transit-deprivation-v2/src/components/MapLegend.js",["86"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { mapColorSchemeNameToInterpolator } from \"../utils/ColorScheme\";\nimport { scaleSequential, scaleLinear } from \"d3\";\n// color helpers\nvar tinycolor = require(\"tinycolor2\");\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"light\",\n    },\n});\n\nconst styles = (theme) => ({\n    mapLegend: {\n        x: 0,\n        y: 0,\n        width: \"320px\",\n        color: theme.palette.text.secondary,\n        background: theme.palette.background.paper,\n        padding: theme.spacing(2)\n\n    },\n    colorBarTicks: {\n        color: theme.palette.text.secondary,\n        fontFamily: \"Roboto\",\n        fontSize: \"10px\",\n        textAnchor: \"middle\",\n    },\n    colorBarLabel: {\n        color: theme.palette.text.secondary,\n        fontFamily: \"Roboto\",\n        fontSize: \"14px\",\n        textAnchor: \"middle\",\n    },\n});\n\nclass MapLegend extends Component {\n\n    label = () => {\n        const { etaView } = this.props;\n        let l = \"\";\n        switch (etaView){\n            case \"mean\":\n                l = \"Mean Travel Time (minutes)\"\n                break;\n            case \"stdev\":\n                l = \"Standard Deviation in Travel Time (minutes)\"\n                break;\n            case \"avail\":\n                l = \"Availability (%)\"\n                break;\n        }\n        return l;\n    }\n\n    render() {\n        const { classes, minValue, maxValue, etaView, colorScheme, opacity } = this.props;\n        let width = 300;\n        let height = 8;\n        let xpad = 5;\n\n        let vmin = minValue;\n        let vmax = maxValue;\n        if (etaView === \"avail\") {\n            vmin = minValue * 100;\n            vmax = maxValue * 100;\n        }\n\n        let mapColorSchemeInterpolator = mapColorSchemeNameToInterpolator(colorScheme);\n        let colorScale = scaleSequential([0, 1], mapColorSchemeInterpolator);\n        let tickScale = scaleLinear().domain([0, 1]).range([vmin, vmax]);\n        let tickValues = tickScale.ticks().map(value => Math.round(tickScale(value)));\n        let tickOffset = width / (tickValues.length - 1);\n\n        return (\n            <Paper\n                id={\"map-legend\"}\n                className={classes.mapLegend}\n            >\n                <svg id=\"map-legend\" width=\"320\" height=\"60\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <defs>\n                        <linearGradient id=\"Gradient\">\n                            {\n                                tickScale.ticks().map((value, index) => (\n                                    // console.log(`${index} ${value} ${colorScale(value)}`)\n                                    <stop key={`stop-${index}`} offset={`${value*100}%`} stopColor={tinycolor(colorScale(value)).setAlpha(opacity)}/>\n                                ))\n\n                            }\n                        </linearGradient>\n                    </defs>\n                    <rect\n                        x={xpad}\n                        y=\"0\"\n                        width={width}\n                        height={height}\n                        stroke=\"transparent\"\n                        strokeWidth=\"1\"\n                        fill=\"url(#Gradient)\"\n                    />\n                    {\n                        tickValues.map((value, index) => (\n                            // console.log(`${value} ${index} ${index * tickOffset}`)\n                            <g\n                                key={`tick-${index}`}\n                                transform={`translate(${xpad + index * tickOffset}, 0)`}\n                            >\n                                <text\n                                    id=\"map-legend\"\n                                    key={`tickValue-${index}`}\n                                    className={classes.colorBarTicks}\n                                    fill={\"currentColor\"}\n                                    style={{transform: `translateY(${height + 20}px)`}}>\n                                    { value }\n                                </text>\n                            </g>\n                        ))\n                    }\n                    <g\n                        key={\"label\"}\n                        transform={`translate(${xpad + width/2}, ${height + 50})`}\n                    >\n                        <text\n                            id=\"map-legend\"\n                            key={\"label\"}\n                            className={classes.colorBarLabel}\n                            fill={\"currentColor\"}\n                        >{this.label}</text>\n                    </g>\n                </svg>\n            </Paper>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        minValue: state.mapMinValue,\n        maxValue: state.mapMaxValue,\n        colorScheme: state.mapColorScheme,\n        opacity: state.mapOpacity,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n    });\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles, {defaultTheme: theme})(MapLegend));\n\n",["87","88"],"/Users/ben/transit-deprivation-v2/src/components/OpacitySlider.js",["89","90","91","92","93"],"import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles, withStyles, createMuiTheme} from '@material-ui/core/styles';\nimport {Paper, Grid, Slider, Select, MenuItem, Typography} from '@material-ui/core';\nimport { setMapOpacity } from \"../store/actions\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"light\",\n    },\n});\n\nconst styles = (theme) => ({\n    mapOpacitySlider: {\n        maxWidth: \"300px\"\n    },\n});\n\nclass OpacitySlider extends Component {\n\n    handleOpacityChange = (event, value) => {\n        const { setMapOpacity } = this.props;\n        setMapOpacity(value);\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Typography gutterBottom>\n                    Opacity\n                </Typography>\n                <Slider\n                    className={classes.mapOpacitySlider}\n                    defaultValue={0.8}\n                    onChange={this.handleOpacityChange}\n                    aria-labelledby=\"continuous-slider\"\n                    valueLabelDisplay=\"auto\"\n                    step={0.01}\n                    min={0.0}\n                    max={1.0}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        setMapOpacity: (mapOpacity) => { dispatch(setMapOpacity(mapOpacity)) },\n    });\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles, {defaultTheme: theme})(OpacitySlider));\n",["94","95"],"/Users/ben/transit-deprivation-v2/src/components/TravelTimePlot.js",[],"/Users/ben/transit-deprivation-v2/src/utils/ColorScheme.js",["96"],"import {interpolateViridis, interpolateTurbo, interpolateBuGn} from 'd3-scale-chromatic';\n\nexport function mapColorSchemeNameToInterpolator(name) {\n    let interp = () => {};\n    switch (name) {\n        case \"BlueGreen\":\n            interp = interpolateBuGn;\n            break;\n        case \"Viridis\":\n            interp = interpolateViridis;\n            break;\n        case \"Turbo\":\n            interp = interpolateTurbo;\n            break;\n    }\n    return(interp);\n}",["97","98"],"/Users/ben/transit-deprivation-v2/src/components/Map.js",["99","100","101","102","103","104"],"/Users/ben/transit-deprivation-v2/src/components/MapTooltip.js",[],"/Users/ben/transit-deprivation-v2/src/components/MapColorSchemeSelector.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"105","replacedBy":"111"},{"ruleId":"107","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":8,"column":1,"nodeType":"115","endLine":46,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":45,"column":9,"nodeType":"118","messageId":"119","endLine":55,"endColumn":10},{"ruleId":"105","replacedBy":"120"},{"ruleId":"107","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":20},{"ruleId":"122","severity":1,"message":"126","line":4,"column":9,"nodeType":"124","messageId":"125","endLine":4,"endColumn":14},{"ruleId":"122","severity":1,"message":"127","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"128","line":4,"column":30,"nodeType":"124","messageId":"125","endLine":4,"endColumn":36},{"ruleId":"122","severity":1,"message":"129","line":4,"column":38,"nodeType":"124","messageId":"125","endLine":4,"endColumn":46},{"ruleId":"105","replacedBy":"130"},{"ruleId":"107","replacedBy":"131"},{"ruleId":"116","severity":1,"message":"117","line":5,"column":5,"nodeType":"118","messageId":"119","endLine":15,"endColumn":6},{"ruleId":"105","replacedBy":"132"},{"ruleId":"107","replacedBy":"133"},{"ruleId":"122","severity":1,"message":"134","line":13,"column":23,"nodeType":"124","messageId":"125","endLine":13,"endColumn":39},{"ruleId":"122","severity":1,"message":"135","line":16,"column":16,"nodeType":"124","messageId":"125","endLine":16,"endColumn":31},{"ruleId":"122","severity":1,"message":"136","line":16,"column":33,"nodeType":"124","messageId":"125","endLine":16,"endColumn":44},{"ruleId":"122","severity":1,"message":"137","line":104,"column":44,"nodeType":"124","messageId":"125","endLine":104,"endColumn":49},{"ruleId":"122","severity":1,"message":"138","line":185,"column":22,"nodeType":"124","messageId":"125","endLine":185,"endColumn":29},{"ruleId":"122","severity":1,"message":"139","line":185,"column":55,"nodeType":"124","messageId":"125","endLine":185,"endColumn":73},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],["140"],["141"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["140"],["141"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Grid' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.",["140"],["141"],["140"],["141"],"'ScatterplotLayer' is defined but never used.","'scaleSequential' is defined but never used.","'scaleLinear' is defined but never used.","'valid' is assigned a value but never used.","'clinics' is assigned a value but never used.","'destinationOverlay' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]